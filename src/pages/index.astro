---
import Layout from "../layouts/Layout.svelte";
import ProjectItem from "../components/ProjectItem.svelte";
import Workspace from "../components/Workspace.svelte";
import Branch from "../components/Branch.svelte";
import Language from "../components/Language.svelte";
import { DateTime } from "luxon";
import { getCodeData, getOtherActivities } from "../lib/rpcUtils";
import { LanyardData } from "sk-lanyard";

const fetchedData = await fetch(
	"https://api.lanyard.rest/v1/users/893762371770802227"
).then((response) => response.json());
const data: LanyardData = fetchedData.data;
let codeData = getCodeData(data);
---

<script>
	document.onmousemove = function (e) {
			var x = e.clientX;
			var y = e.clientY;
			const jake = document.getElementById("jake");
			if (!jake) return;
			jake.style.marginLeft = x + "px";
			jake.style.marginTop = y + "px";
		};
		window.onscroll = () => {
			window.scroll(0, 0);
		};

		document.onclick = async function (e){
			const jake = document.getElementById("jake");
			if (!jake) return;
			jake.style.height = "25px"
			jake.style.width = "25px"
			await new Promise(resolve => setTimeout(resolve, 100));
			jake.style.height = "20px"
			jake.style.width = "20px"
		}
		
	setInterval(() => {
		const timeZone = "America/New_York";
		const isTimeZoneSame =
			Intl.DateTimeFormat().resolvedOptions().timeZone === timeZone;

			
		let timeZoneToggle = false;
		document.getElementById("time_div").onclick = function () {
			timeZoneToggle = !timeZoneToggle;
			console.log(timeZoneToggle);
		};

		let timeFormatter = new Intl.DateTimeFormat("en-US", {
			hour: "numeric",
			minute: "numeric",
			second: "numeric",
			timeZone: timeZoneToggle ? timeZone : undefined,
		});
		console.log(timeZoneToggle)
		let dateFormatter = new Intl.DateTimeFormat("en-US", {
			month: "long",
			day: "numeric",
			year: "numeric",
			timeZoneName: "short",
			timeZone: timeZoneToggle ? timeZone : undefined,
		});

		let now = new Date();
		let date = dateFormatter.format(now);
		let time = timeFormatter.format(now);

		document.getElementById("time_span").innerHTML = date;
		document.getElementById("date_span").innerHTML = time;
	}, 100);

	setInterval(() => {
		
	}, 300);
</script>
<astro:head>
	<title>silly little portfolio</title>
	<meta name="og:title" content="portfolio" />
	<meta name="description" content="a collection of various things" />
	<meta name="og:description" content="a collection of various things" />
	<meta
		name="theme-color"
		media="(prefers-color-scheme: light)"
		content="#f9f0f5"
	/>
	<meta
		name="theme-color"
		media="(prefers-color-scheme: dark)"
		content="#281c21"
	/>
</astro:head>
<Layout>
	<div
		class="font-bold text-gray-700 opacity-50 rounded-full bg-white flex items-center justify-center font-mono"
		style="height: 20px; width: 20px"
		id="jake"
	/>
	<div
		class="overflow-x-hidden overflow-y-hidden"
		style="width: 100vw; height: 100vh; position: fixed; top: 0; left: 0; z-index: 999"
	>
		<section
			class="p-8 sm:p-12 lg:p-24 lg:py-16 font-cascadia z-10 flex flex-col sm:flex-row gap-y-10 justify-center grid place-items-center h-screen"
		>
			<div class="flex flex-col gap-7">
				<div>
					<h1 class="text-ocean-700 dark:text-ocean-300">
						<span class="dark:text-ocean-blue">compey</span>
						<Workspace
							id="workspace_data"
							workspace={codeData?.workspace}
						/>
						<Branch id="branch_data" name={codeData?.branch} />
						<Language id="lang_data" lang={codeData?.lang} />
					</h1>
					<br />
					<h1 class="text-ocean-900 dark:text-ocean-100 heading">
						projects
					</h1>
					<ul
						class="list-disc list-inside text-ocean-700 dark:text-ocean-blue"
					>
						<ProjectItem
							href="https://datalink.dev"
							name="datalink"
							description="lightweight & futuristic analytics platform"
						/>
						<ProjectItem
							href="https://github.com/flightpkg"
							name="flightpkg"
							description="package manager of the future"
						/>
						<ProjectItem
							href="https://github.com/CompeyDev/bvm"
							name="bvm"
							description="bun version manager"
						/>
						<ProjectItem
							href="https://github.com/CompeyDev/roblox.js"
							name="roblox.js"
							description="roblox opencloud js wrapper"
						/>
						<ProjectItem
							href="https://github.com/CompeyDev/discord-status-action"
							name="discord-status-action"
							description="discord status emoji using GitHub Actions"
						/>
					</ul>
				</div>
				<div>
					<h1 class="text-ocean-900 dark:text-ocean-100 heading">links</h1>
					<ul
						class="list-disc list-inside text-ocean-700 dark:text-ocean-blue"
					>
						<ProjectItem
							href="https://twitter.com/DevComp_"
							name="twitter"
						/>
						<ProjectItem
							href="https://github.com/CompeyDev"
							name="github"
						/>
						<ProjectItem href="mailto:hi@devcomp.xyz" name="email" />
					</ul>
				</div>
				<div
					class="text-ocean-900 dark:text-ocean-300 flex flex-col items-start sm:items-end gap-3 sm:gap-7 sm:text-right"
				>
					<div
						id="time_div"
						class="flex flex-col items-start sm:items-end hover:underline cursor-pointer"
					>
						<span id="time_span">"Loading..."</span>
						<span id="date_span">"Loading..."</span>
					</div>
					<script>
						let j = document.getElementById('refresh').innerHTML
						// const { data.spotify?.song } = { data.spotify?.song }
						setInterval(() => {
							console.log("refreshing div");
							window.location.href = window.location.href;
							document.getElementById("spotify_song").innerHTML = j;
						}, 100)
					</script>
					
					<div class="flex flex-col items-start sm:items-end">
						<span id="spotify_song" class="text-ocean-900 dark:text-ocean-100 heading"
							>{data.spotify?.song}</span
						>
						<span id="spotify_artist" class="text-ocean-800 dark:text-ocean-300"
							>{data.spotify?.artist}</span
						>
						<span id="spotify_album" class="text-ocean-700 dark:text-ocean-400"
							>{data.spotify?.album}</span
						>
					</div>
				</div>
			</div>
		</section>
	</div>
</Layout>
